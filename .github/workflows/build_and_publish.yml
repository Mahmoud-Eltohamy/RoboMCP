name: Build and Publish Python Wheels

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build wheel setuptools twine

      - name: Build wheel
        run: |
          python -m build --wheel

      - name: Store built wheel
        uses: actions/upload-artifact@v3
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.python-version }}
          path: dist/*.whl

  publish_wheels:
    name: Publish wheels to GitHub Packages
    runs-on: ubuntu-latest
    needs: build_wheels
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install twine

      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: dist/

      - name: Flatten directory structure
        run: |
          mkdir -p tmp_dist
          find dist -name "*.whl" -exec cp {} tmp_dist/ \;
          rm -rf dist
          mv tmp_dist dist

      - name: List packages
        run: |
          ls -la dist

      - name: Publish to GitHub Packages
        uses: pypa/gh-action-pypi-publish@v1.5.1
        with:
          user: __token__
          password: ${{ secrets.GITHUB_TOKEN }}
          repository_url: https://github.com/${{ github.repository }}
          skip_existing: true
          packages_dir: dist/

  publish_release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: publish_wheels
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts/

      - name: Flatten directory structure
        run: |
          mkdir -p dist
          find artifacts -name "*.whl" -exec cp {} dist/ \;

      - name: List packages
        run: |
          ls -la dist

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*.whl
          draft: false
          prerelease: false
          generate_release_notes: true

  build_docs:
    name: Build and deploy documentation
    runs-on: ubuntu-latest
    needs: build_wheels
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e .
          python -m pip install sphinx sphinx_rtd_theme myst-parser

      - name: Build documentation
        run: |
          mkdir -p docs/sphinx
          sphinx-quickstart -q -p "MCP Appium" -a "MCP Team" -v "$(python setup.py --version)" --ext-autodoc --ext-viewcode docs/sphinx
          cd docs/sphinx
          sphinx-apidoc -o . ../../mcp_appium
          make html

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@4.1.7
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
        with:
          branch: gh-pages
          folder: docs/sphinx/_build/html